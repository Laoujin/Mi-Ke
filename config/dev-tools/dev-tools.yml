# TODO: What about binary files?
Base64 encode/decode selected text:
	hotkey: <^>!b
	readFrom: [explorer-file, selectedText]
	writeTo: clipboard
	followedBy:
		- desc: Base64 encode
			key: e
			fn: Base64Encode

		- desc: Base64 decode
			key: d
			fn: Base64Decode

		- desc: JWT decode
			key: j
			fn: JwtDecode



Change casing of selected text:
	hotkey: <^>!c
	readFrom: selectedText
	followedBy:
		- desc: To Title Case
			key: t|p
			fn: ToTitleCase

		- desc: TO UPPER CASE
			key: u
			fn: ToUpperCase

		- desc: to lower case
			key: l
			fn: ToLowerCase

		- desc: To sentence case
			key: s
			fn: ToSentenceCaseBlend

		- desc: Invert case
			key: i
			fn: InvertCase



# TODO: should also be able to parse the currently
#			 selected text and print that specific date
Print current date in a specific format:
	hotkey: <^>!d
	writeTo: selectedText
	followedBy:
		- desc: Sortable date
			key: s
			fn: ToSortableDate

		- desc: Sortable date (safe for filename)
			key: f
			fn: ToSortableFileNameDate

		- desc: Human readable
			key: h
			fn: ToHumanReadableDate

		- desc: ISO8601
			key: i
			fn: ToIsoDate



Change end of line sequence of selected file in Windows Explorer:
	hotkey: <^>!e
	context: explorer
	readFrom: explorer-file
	followedBy:
		- desc: To DOS (\r\n)
			key: d|w
			fn: EolToDos

		- desc: To Unix (\n)
			key: u
			fn: EolToUnix

		- desc: To Mac (\r)
			key: m
			fn: EolToMac


JSON tools:
	hotkey: <^>!j
	readFrom: selectedText
	writeTo: clipboard
	followedBy:
		- desc: Beautify
			key: b
			fn: JsonBeautify
		- desc: Uglify
			key: u
			fn: JsonUglify



Paste lorem ipsum:
	label: LoremIpsum
	hotkey: <^>!l



Markdown generation:
	hotkey: "<^>!:"
	readFrom: selectedText
	writeTo: selectedText
	followedBy:
		- desc: Surround with code block
			key: c
			fn: MdCodeBlockSurround
		- desc: Bold
			key: b
			fn: MdBold


New Markdown code block:
	label: MdCodeBlockNew
	hotkey: <^>!m


Transform color:
	hotkey: <^>!p
	readFrom: selectedText
	writeTo: clipboard
	followedBy:
		- desc: RGB -> Hex
			key: h
			fn: RgbToHex
		- desc: Hex -> RGB
			key: r
			fn: HexToRgb



# Key is not C:\Users because : is invalid character
Translate C\Users\ to /c/Users/:
	desc: Converts the selected text
	label: PathWinToUnix
	hotkey: <^>!#p


Convert hhmm to decimal:
	hotkey: <^>!t
	label: HoursMinutesToDecimal



# Time convertion:
# 	hotkey: <^>!t
# 	readFrom: selectedText
# 	writeTo: clipboard
# 	followedBy:
# 		- desc: "From hh:mm to decimal"
# 			key: d
# 			fn: HoursMinutesToDecimal



# There is also LC_UrlEncode & LC_UrlDecode
Uri encode/decode or slugify selected text:
	hotkey: <^>!u
	readFrom: selectedText
	writeTo: clipboard
	followedBy:
		- desc: Uri encode
			key: e
			fn: LC_UriEncode

		- desc: Uri decode
			key: d
			fn: LC_UriDecode

		- desc: Slugify
			key: s
			fn: Slugify



Xml prettify:
	hotkey: <^>!x
	readFrom: selectedText
	writeTo: clipboard
	followedBy:
		- desc: Prettify xml
			key: p
			fn: sXML_Pretty
